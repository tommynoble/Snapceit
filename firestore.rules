rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuth() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Receipts collection rules
    match /receipts/{receiptId} {
      allow read: if isAuth();
      allow create: if isAuth() 
        && request.resource.data.userId == request.auth.uid;
      allow update: if isAuth() 
        && request.resource.data.userId == request.auth.uid;
      allow delete: if isAuth() 
        && resource.data.userId == request.auth.uid;
    }

    // User profiles collection rules
    match /users/{userId} {
      allow read: if isAuth() && isOwner(userId);
      allow create: if isAuth() && isOwner(userId)
        && request.resource.data.keys().hasAll(['email', 'createdAt']);
      allow update: if isAuth() && isOwner(userId);
      allow delete: if isAuth() && isOwner(userId);
    }

    // Categories collection rules (if you have predefined categories)
    match /categories/{categoryId} {
      allow read: if isAuth(); // All authenticated users can read categories
      allow write: if false;   // Only admin can modify (through Firebase Console)
    }
  }
}
